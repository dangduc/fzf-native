name: CMake

on:
  pull_request:
    branches: [ "compile" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  REPO: "compile"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set git config
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake -DCMAKE_C_FLAGS='-O3 -march=native' --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Commit
      continue-on-error: true
      run: |
        git pull
        git add .
        git commit -m "Update modules ${{ matrix.targets }}"
    - name: Push
      uses: ad-m/github-push-action@master
      with:
        repository: ${{ env.REPO }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: compile
        retry: 7

